@use "../../../../../style/vars";
@use "../fab";

@keyframes popInFabElement {
	from {
		filter: opacity(0) blur(5px);
	}

	to {
		filter: opacity(1) blur(0);
	}
}

.fabElement {
	--img: "";
	--angle: 0;
	--distance: 10rem;

	position: absolute;
	z-index: 1;
	bottom: 0;
	left: 0;
	width: 3rem;
	height: 3rem;
	margin: 0.5rem;
	transform: rotate(calc(0.15deg * var(--angle)));
	transform-origin: 1rem;
	display: flex;
	opacity: 0;
	transition: all .25s ease;

	.icon {
		transform: rotate(calc(-0.15deg * var(--angle)));
		margin-left: auto;
		background-color: vars.$background-el1;
		background-image: var(--img);
		background-size: contain;
		background-origin: content-box;
		background-repeat: no-repeat;
		padding: .5rem;
		width: 3rem;
		height: 3rem;
		border-radius: 50%;
		border: 1px solid vars.$border-color;
		will-change: transform;
		transition: all .25s ease, padding .1s ease;
		animation: popInFabElement 0.2s ease forwards;

		&.clickable {
			cursor: pointer;

			&:hover {
				background-color: vars.$background-el2;
			}

			&:active {
				padding: .4rem;
			}
		}
	}

	&.small {
		width: 2rem;
		height: 2rem;

		.icon {
			width: 2rem;
			height: 2rem;
			padding: .25rem;

			&:active {
				padding: .15rem;
			}
		}
	}

	&.small.editingOnlyVisible {
		z-index: 2;
	}
}

.floatingActionButton {
	&.show:not(.remove) {
		.fabElement {
			transform: rotate(calc(1deg * var(--angle)));
			width: var(--distance);
			opacity: 1;

			.icon {
				transform: rotate(calc(-1deg * var(--angle)));
			}
		}
	}

	&:not(.editing) .fabElement.editingOnlyVisible {
		width: 0;
		transform: rotate(calc(0.15deg * var(--angle)));
		opacity: 0;
	}
}