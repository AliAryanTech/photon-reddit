@use "../../../../style/vars";

#mainWrapper > .header {
	top: 0;
	width: 100%;
	height: vars.$headerHeight;
	position: sticky;
	z-index: 1;
	transform: translateY(-100%);
	transition: transform .25s linear;

	> .actions {
		position: relative;
		z-index: 55;
		display: flex;
		justify-content: center;
		height: 100%;
		transition: all .25s linear;

		> * {
			display: flex;
			justify-content: center;
			align-items: center;

			& > * {
				margin: 0 .5rem;
			}
		}

		> div {
			> .showSettingsButton {
				--dim: 2.5rem;

				> img {
					width: 2.5rem;
				}
			}
		}

		.leftItems {
			position: absolute;
			left: 1rem;
			height: 100%;

			> .pinToggleButton {
				width: 1.5rem;
				height: 1.5rem;
				--dim: 2rem;

				img {
					width: 100%;
					height: 100%;
					opacity: .4;
					transform: rotate(45deg);
					transition: all ease .125s;

					&:hover {
						opacity: 1;
					}
				}

				&.pinned img {
					transform: rotate(0);
				}
			}
		}

		.feedSpecific {
			position: absolute;
			right: 1rem;
			height: 100%;

			&:empty {
				display: none !important;
			}

			.commentsSorter {
				margin-left: auto;

				> .dropDownButton {
					display: flex;
					align-items: center;

					> img {
						height: 2em;
						margin-left: .5rem;
					}
				}
			}
		}

		#loginButton {
			background: vars.$primaryContrast;
			height: 2.5rem;
			padding: 0 .75rem;
			border-radius: 1.25rem;
			transition: background-color .25s ease;

			&:hover {
				background: vars.$primary;
			}
		}
	}

	.expander {
		z-index: 50;
		top: 0;
		pointer-events: none;

		svg {
			width: 100%;
			height: calc(#{vars.$headerHeight} * 2);

			.filled {
				fill: var(--bg-color);
				stroke: none;
			}

			.stroked {
				transition: stroke .5s ease;
				fill: none;
				stroke: #eeeeee;
			}
		}
	}

	> .accessibilitySpacer {
		width: 25%;
		height: 50%;
	}

	&.hover {
		transform: translateY(0);

		.actions {
			height: 130%;
		}

		> .accessibilitySpacer {
			height: 150%;
			width: 100%;
			top: vars.$headerHeight;
		}
	}

	&.contentIsLoading {
		.stroked {
			stroke: lightskyblue !important;
		}
	}
}
